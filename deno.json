{
  "compilerOptions": {
    "strict": true,
    "noImplicitAny": true,
    "noImplicitReturns": true,
    "noFallthroughCasesInSwitch": true,
    "noUnusedLocals": true,
    "noUnusedParameters": true,
    "noImplicitThis": true,
    "noPropertyAccessFromIndexSignature": true,
    "noUncheckedIndexedAccess": true,
    "exactOptionalPropertyTypes": true,
    "strictNullChecks": true,
    "strictFunctionTypes": true,
    "strictBindCallApply": true,
    "strictPropertyInitialization": true,
    "useUnknownInCatchVariables": true,
    "noImplicitOverride": true
  },
  "fmt": {
    "include": ["scripts/", "tests/"],
    "exclude": ["coverage/", "node_modules/"],
    "useTabs": false,
    "lineWidth": 80,
    "indentWidth": 2,
    "singleQuote": false,
    "proseWrap": "preserve"
  },
  "lint": {
    "include": ["scripts/", "tests/"],
    "exclude": ["coverage/", "node_modules/"],
    "rules": {
      "tags": ["recommended"],
      "include": [
        "ban-untagged-todo",
        "no-explicit-any",
        "no-implicit-any"
      ],
      "exclude": [
        "no-unused-vars",
        "explicit-function-return-type",
        "no-case-declarations"
      ]
    }
  },
  "test": {
    "include": ["tests/"],
    "exclude": ["node_modules/"]
  },
  "tasks": {
    "test": "deno test --allow-all",
    "test:coverage": "deno test --allow-all --coverage=coverage",
    "test:coverage:html": "deno test --allow-all --coverage=coverage && deno coverage coverage --html",
    "test:coverage:lcov": "deno test --allow-all --coverage=coverage && deno coverage coverage --lcov > coverage.lcov",
    "test:coverage:report": "deno test --allow-all --coverage=coverage && deno coverage coverage",
    "lint": "deno lint",
    "fmt": "deno fmt",
    "fmt:check": "deno fmt --check",
    "check": "deno check scripts/**/*.ts tests/**/*.ts"
  },
  "imports": {
    "@std/": "https://deno.land/std@0.224.0/",
    "@pmat/": "../paiml-mcp-agent-toolkit/"
  }
}
