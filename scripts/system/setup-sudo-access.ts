#!/usr/bin/env -S deno run --allow-all

import { logger } from "../lib/logger.ts";
import { requireRoot, runCommand } from "../lib/common.ts";

const SUDOERS_FILE = "/etc/sudoers.d/ubuntu-config-scripts";

async function main(): Promise<void> {
  logger.info("Setting up passwordless sudo for ubuntu-config-scripts");

  requireRoot();

  // Get the actual user who invoked sudo (not root)
  const username = Deno.env.get("SUDO_USER") || "noah";
  const projectPath = "/home/noah/src/ubuntu-config-scripts";
  const denoPath = "/home/noah/.local/bin/deno";

  logger.info(`Configuring sudo access for user: ${username}`);

  // Create sudoers configuration
  const sudoersContent = `# Ubuntu Config Scripts - Passwordless sudo access
# Generated by setup-sudo-access.ts
# This allows running specific system configuration scripts without password

# Disable TTY requirement for this user (allows non-interactive sudo)
Defaults:${username} !requiretty
Defaults:${username} !visiblepw

# Allow running the DaVinci configuration script
${username} ALL=(ALL) NOPASSWD: ${denoPath} run --allow-all ${projectPath}/scripts/system/configure-davinci.ts *

# Allow running audio configuration scripts  
${username} ALL=(ALL) NOPASSWD: ${denoPath} run --allow-all ${projectPath}/scripts/audio/fix-audio.ts *
${username} ALL=(ALL) NOPASSWD: ${denoPath} run --allow-all ${projectPath}/scripts/audio/configure-speakers.ts *

# Allow running system update scripts
${username} ALL=(ALL) NOPASSWD: ${denoPath} run --allow-all ${projectPath}/scripts/system/update-deno.ts *

# Allow apt-get commands for driver installation (restricted)
${username} ALL=(ALL) NOPASSWD: /usr/bin/apt-get update
${username} ALL=(ALL) NOPASSWD: /usr/bin/apt-get install -y nvidia-driver-* nvidia-cuda-toolkit

# Allow nvidia-smi for checking GPU status
${username} ALL=(ALL) NOPASSWD: /usr/bin/nvidia-smi *

# Allow writing to system configuration directories
${username} ALL=(ALL) NOPASSWD: /usr/bin/tee /etc/profile.d/davinci-cuda.sh
${username} ALL=(ALL) NOPASSWD: /usr/bin/chmod +x /etc/profile.d/davinci-cuda.sh
${username} ALL=(ALL) NOPASSWD: /bin/chmod +x /etc/profile.d/davinci-cuda.sh

# Allow make commands in the project directory
${username} ALL=(ALL) NOPASSWD: /usr/bin/make -C ${projectPath} system-davinci
${username} ALL=(ALL) NOPASSWD: /usr/bin/make -C ${projectPath} system-davinci-dry
${username} ALL=(ALL) NOPASSWD: /usr/bin/make -C ${projectPath} system-davinci-check
`;

  // Validate sudoers syntax before writing
  const tempFile = await Deno.makeTempFile({ suffix: ".sudoers" });
  await Deno.writeTextFile(tempFile, sudoersContent);

  const checkResult = await runCommand(["visudo", "-c", "-f", tempFile]);

  if (!checkResult.success) {
    logger.error("Invalid sudoers syntax!");
    logger.error(checkResult.stderr);
    await Deno.remove(tempFile);
    Deno.exit(1);
  }

  // Write the validated sudoers file
  await Deno.writeTextFile(SUDOERS_FILE, sudoersContent);
  await runCommand(["chmod", "0440", SUDOERS_FILE]);

  logger.success(`✓ Sudoers file created at ${SUDOERS_FILE}`);

  // Clean up temp file
  await Deno.remove(tempFile);

  logger.info("");
  logger.info("The following commands can now run without password:");
  logger.info("  • make system-davinci");
  logger.info("  • make system-davinci-dry");
  logger.info("  • make system-davinci-check");
  logger.info("  • deno run --allow-all scripts/system/configure-davinci.ts");
  logger.info("  • deno run --allow-all scripts/audio/fix-audio.ts");
  logger.info("");
  logger.info("Security notes:");
  logger.info("  • Only specific scripts are allowed");
  logger.info("  • apt-get is restricted to NVIDIA packages");
  logger.info("  • Configuration is in /etc/sudoers.d/ubuntu-config-scripts");
  logger.info("");
  logger.info("To remove this configuration later, run:");
  logger.info("  sudo rm /etc/sudoers.d/ubuntu-config-scripts");
}

if (import.meta.main) {
  try {
    await main();
  } catch (error) {
    logger.error(`Error: ${error}`);
    Deno.exit(1);
  }
}
